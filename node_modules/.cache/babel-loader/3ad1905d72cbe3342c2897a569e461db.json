{"ast":null,"code":"var _jsxFileName = \"/Users/danashalit/Desktop/Job Search/chegg-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(squares) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"singleBox\",\n    onClick: squares.onClick,\n    children: squares.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  constructor(squares) {\n    super(squares);\n    this.state = {\n      boxes: Array(9).fill(null)\n    };\n  }\n\n  updateSelected(num) {\n    const boxes = this.state.boxes.slice();\n\n    if (checkWinner(boxes) || boxes[num]) {\n      return;\n    }\n\n    boxes[num] = this.state.nextTurn ? 'X' : 'O';\n    this.setState({\n      boxes: boxes,\n      nextTurn: !this.state.nextTurn\n    });\n  }\n\n  updateSquare(num) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.boxes[num],\n      onClick: () => this.updateSelected(num)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    const winner = checkWinner(this.state.boxes);\n    let updateTurn;\n    let currentPlayer;\n\n    if (winner) {\n      updateTurn = winner + \" wins!\";\n    } else {\n      if (this.state.nextTurn) {\n        currentPlayer = \"Player 1\";\n      } else {\n        currentPlayer = \"Player 2\";\n      }\n\n      updateTurn = currentPlayer + \"'s turn\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [winner && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"winnerWon\",\n        children: updateTurn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 22\n      }, this), !winner && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"updateTurn\",\n        children: updateTurn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.updateSquare(0), this.updateSquare(1), this.updateSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.updateSquare(3), this.updateSquare(4), this.updateSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.updateSquare(6), this.updateSquare(7), this.updateSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction Game() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Game;\n\nfunction checkWinner(boxes) {\n  const checkRows = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < checkRows.length; i++) {\n    const [a, b, c] = checkRows[i];\n    console.log(\"a: \", boxes[a]);\n    console.log(\"b: \", boxes[b]);\n    console.log(\"c: \", boxes[c]);\n    console.log(checkRows);\n\n    if (boxes[a] && boxes[a] === boxes[b] && boxes[a] === boxes[c]) {\n      return boxes[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render(Game(), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"sources":["/Users/danashalit/Desktop/Job Search/chegg-app/src/index.js"],"names":["React","ReactDOM","Square","squares","onClick","value","Board","Component","constructor","state","boxes","Array","fill","updateSelected","num","slice","checkWinner","nextTurn","setState","updateSquare","render","winner","updateTurn","currentPlayer","Game","checkRows","i","length","a","b","c","console","log","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square (squares) {\n      return (\n        <button className=\"singleBox\"  onClick={squares.onClick}>\n          {squares.value}\n        </button>\n      );\n  }\n  \n  class Board extends React.Component {\n    constructor(squares) {\n      super(squares);\n      this.state = {\n        boxes: Array(9).fill(null),\n      };\n    }\n\n    updateSelected(num) {\n      const boxes = this.state.boxes.slice();\n      if (checkWinner(boxes) || boxes[num]) {\n      return;\n      }\n      boxes[num] = this.state.nextTurn ? 'X' : 'O';\n      this.setState({\n        boxes: boxes,\n        nextTurn: !this.state.nextTurn,\n      });\n    }\n    updateSquare(num) {\n      return (\n        <Square \n          value={this.state.boxes[num]} \n          onClick={() => this.updateSelected(num)}\n      />\n      );\n    }\n  \n    render() {\n      const winner = checkWinner(this.state.boxes);\n      let updateTurn;\n      let currentPlayer;\n      if (winner) {\n        updateTurn = winner + \" wins!\";\n      } else {\n          if (this.state.nextTurn) {\n            currentPlayer = \"Player 1\";\n          } else {\n              currentPlayer = \"Player 2\";\n          }\n        updateTurn = currentPlayer + \"'s turn\"\n      }\n      return (\n        <div>\n          {winner && <h3 className=\"winnerWon\">{updateTurn}</h3> }\n          {!winner && <h3 className=\"updateTurn\">{updateTurn}</h3>}\n          <div>\n            {this.updateSquare(0)}\n            {this.updateSquare(1)}\n            {this.updateSquare(2)}\n          </div>\n          <div>\n            {this.updateSquare(3)}\n            {this.updateSquare(4)}\n            {this.updateSquare(5)}\n          </div>\n          <div >\n            {this.updateSquare(6)}\n            {this.updateSquare(7)}\n            {this.updateSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  function Game () {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n        </div>\n      );\n  }\n\n  function checkWinner (boxes) {\n    const checkRows = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < checkRows.length; i++) {\n      const [a, b, c] = checkRows[i];\n      console.log(\"a: \", boxes[a]);\n      console.log(\"b: \", boxes[b]);\n      console.log(\"c: \", boxes[c]);\n      console.log(checkRows);\n      if (boxes[a] && boxes[a] === boxes[b] && boxes[a] === boxes[c]) {\n        return boxes[a];\n      } \n      \n    }\n    return null;\n  }\n  \n  // ========================================\n  ReactDOM.render(\n    Game(),\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}