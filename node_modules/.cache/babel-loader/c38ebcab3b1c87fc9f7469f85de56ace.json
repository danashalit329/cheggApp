{"ast":null,"code":"var _jsxFileName = \"/Users/danashalit/Desktop/Job Search/chegg-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(squares) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"singleBox\",\n    onClick: squares.onClick,\n    children: squares.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  // constructor(squares) {\n  //   super(squares);\n  //   this.state = {\n  //     boxes: Array(9).fill(null),\n  //   };\n  // }\n  updateSelected(num) {\n    const boxes = this.state.boxes.slice();\n\n    if (checkWinner(boxes) || boxes[num]) {\n      return;\n    }\n\n    boxes[num] = this.state.nextTurn ? 'X' : 'O';\n    this.setState({\n      boxes: boxes,\n      nextTurn: !this.state.nextTurn\n    });\n  }\n\n  updateSquare(num) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.squares.boxes[num],\n      onClick: () => this.squares.onClick(num)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  }\n\n  restartGame() {\n    this.state = {\n      boxes: Array(9).fill(null)\n    };\n\n    for (let x = 0; x < 10; x++) {\n      this.updateSelected(x);\n    }\n  }\n\n  render() {\n    const history = this.state.history;\n    const currentMoves = history[history.length - 1];\n    let filled = false;\n\n    if (this.state.nextTurn == undefined) {\n      this.state.nextTurn = true;\n    }\n\n    const winner = checkWinner();\n    const boxes = currentMoves.squares.slice();\n\n    if (!boxes.includes(null)) {\n      filled = true;\n    }\n\n    let updateTurn;\n    let currentPlayer;\n\n    if (winner) {\n      updateTurn = winner + \" wins!\";\n    } else if (filled) {\n      updateTurn = \"Tie Game!\";\n    } else {\n      if (this.state.nextTurn) {\n        currentPlayer = \"Player 1\";\n      } else {\n        currentPlayer = \"Player 2\";\n      }\n\n      updateTurn = currentPlayer + \"'s turn\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [winner || filled && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"endGame\",\n        children: updateTurn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 32\n      }, this), !winner && !filled && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"updateTurn\",\n        children: updateTurn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.updateSquare(0), this.updateSquare(1), this.updateSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.updateSquare(3), this.updateSquare(4), this.updateSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.updateSquare(6), this.updateSquare(7), this.updateSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"resetButton\",\n        onClick: () => this.restartGame(),\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(squares) {\n    super(squares);\n    this.state = {\n      history: [{\n        boxes: Array(9).fill(null)\n      }],\n      nextTurn: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction checkWinner(boxes, filled) {\n  const checkRows = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < checkRows.length; i++) {\n    const [a, b, c] = checkRows[i];\n\n    if (boxes[a] && boxes[a] === boxes[b] && boxes[a] === boxes[c]) {\n      return boxes[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 144,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/danashalit/Desktop/Job Search/chegg-app/src/index.js"],"names":["React","ReactDOM","Square","squares","onClick","value","Board","Component","updateSelected","num","boxes","state","slice","checkWinner","nextTurn","setState","updateSquare","restartGame","Array","fill","x","render","history","currentMoves","length","filled","undefined","winner","includes","updateTurn","currentPlayer","Game","constructor","checkRows","i","a","b","c","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square (squares) {\n      return (\n        <button className=\"singleBox\"  onClick={squares.onClick}>\n          {squares.value}\n        </button>\n      );\n  }\n  \n  class Board extends React.Component {\n    // constructor(squares) {\n    //   super(squares);\n    //   this.state = {\n    //     boxes: Array(9).fill(null),\n    //   };\n    // }\n\n    updateSelected(num) {\n      const boxes = this.state.boxes.slice();\n      if (checkWinner(boxes) || boxes[num]) {\n      return;\n      }\n      boxes[num] = this.state.nextTurn ? 'X' : 'O';\n      this.setState({\n        boxes: boxes,\n        nextTurn: !this.state.nextTurn,\n      });\n    }\n    updateSquare(num) {\n      return (\n        <Square \n          value={this.squares.boxes[num]} \n          onClick={() => this.squares.onClick(num)}\n      />\n      );\n    }\n    restartGame () {\n        this.state = {\n          boxes: Array(9).fill(null),\n        }\n        for (let x = 0; x < 10; x++) {\n            this.updateSelected(x);\n        }\n  }\n    render() {\n        const history = this.state.history;\n        const currentMoves = history[history.length -1];\n\n     let filled = false;\n     if (this.state.nextTurn == undefined) {\n        this.state.nextTurn = true;\n     }\n      const winner = checkWinner();\n      const boxes = currentMoves.squares.slice();\n      if (!boxes.includes(null)) {\n        filled = true;\n      }\n      let updateTurn;\n      let currentPlayer;\n      if (winner) {\n        updateTurn = winner + \" wins!\";\n      } else if (filled) {\n          updateTurn = \"Tie Game!\"\n      } else {\n          if (this.state.nextTurn) {\n            currentPlayer = \"Player 1\";\n          } else {\n              currentPlayer = \"Player 2\";\n          }\n        updateTurn = currentPlayer + \"'s turn\"\n      }\n      return (\n        <div>\n          {winner || filled && <h3 className=\"endGame\">{updateTurn}</h3> }\n          {!winner && !filled && <h3 className=\"updateTurn\">{updateTurn}</h3>}\n\n          <div>\n            {this.updateSquare(0)}\n            {this.updateSquare(1)}\n            {this.updateSquare(2)}\n          </div>\n          <div>\n            {this.updateSquare(3)}\n            {this.updateSquare(4)}\n            {this.updateSquare(5)}\n          </div>\n          <div >\n            {this.updateSquare(6)}\n            {this.updateSquare(7)}\n            {this.updateSquare(8)}\n          </div>\n          <button className=\"resetButton\" onClick={() => this.restartGame()}>Reset Game</button>\n\n        </div>\n        \n      );\n    }\n  }\n  class Game extends React.Component {\n      constructor (squares) {\n          super(squares);\n          this.state = {\n              history: [{\n                  boxes: Array(9).fill(null),\n              }],\n              nextTurn: true,\n          }\n      }\n      render () {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n        </div>\n      );\n      }\n  }\n  function checkWinner (boxes, filled) {\n    const checkRows = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < checkRows.length; i++) {\n      const [a, b, c] = checkRows[i];\n      if (boxes[a] && boxes[a] === boxes[b] && boxes[a] === boxes[c]) {\n        return boxes[a];\n      } \n    }\n    return null;\n  }\n  \n  // ========================================\n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}