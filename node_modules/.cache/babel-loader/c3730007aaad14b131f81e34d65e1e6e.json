{"ast":null,"code":"var _jsxFileName = \"/Users/danashalit/Desktop/Job Search/chegg-app/src/index.js\";\n// Main component for tic-tac-toe board\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getBoxes(squares) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: squares.onClick,\n    children: squares.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\nclass Board extends React.Component {\n  constructor(squares) {\n    super(squares);\n    this.state = {\n      boxes: Array(9).fill(null)\n    };\n  }\n\n  handleClick(i) {\n    const boxes = this.state.boxes.slice();\n\n    if (checkWinner(boxes) || boxes[i]) {\n      return;\n    }\n\n    boxes[i] = this.state.nextX ? 'X' : 'O';\n    this.setState({\n      boxes: boxes,\n      nextX: !this.state.nextX\n    });\n  }\n\n  updateSquares(num) {\n    return /*#__PURE__*/_jsxDEV(\"getBoxes\", {\n      value: this.state.boxes[num],\n      onClick: () => this.handleClick(num)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    const winner = checkWinner(this.state.boxes);\n    let update;\n\n    if (winner) {\n      update = 'The winner\" ' + winner;\n    } else {\n      update = (this.state.nextX ? 'X' : 'O') + \", it is your turn!\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update\",\n        children: update\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.updateSquares(0), this.updateSquares(1), this.updateSquares(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.updateSquares(3), this.updateSquares(4), this.updateSquares(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.updateSquares(6), this.updateSquares(7), this.updateSquares(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction checkWinner(boxes) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (boxes[a] && boxes[a] === boxes[b] && boxes[a] === boxes[c]) {\n      return boxes[a];\n    }\n  }\n\n  return null;\n}\n\nfunction playGame() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n}\n\nReactDOM.render(playGame(), document.getElementById('root'));","map":{"version":3,"sources":["/Users/danashalit/Desktop/Job Search/chegg-app/src/index.js"],"names":["React","ReactDOM","getBoxes","squares","onClick","value","Board","Component","constructor","state","boxes","Array","fill","handleClick","i","slice","checkWinner","nextX","setState","updateSquares","num","render","winner","update","lines","length","a","b","c","playGame","document","getElementById"],"mappings":"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","sourcesContent":["// Main component for tic-tac-toe board\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction getBoxes (squares) {\n    return (\n        <button className=\"square\" onClick={squares.onClick}>{squares.value}</button>\n    );\n}\n\n  class Board extends React.Component {\n    constructor(squares) {\n      super(squares);\n      this.state = {\n        boxes: Array(9).fill(null),\n      };\n    }\n    handleClick(i) {\n      const boxes = this.state.boxes.slice();\n      if (checkWinner(boxes) || boxes[i]) {\n      return;\n      }\n      boxes[i] = this.state.nextX ? 'X' : 'O';\n      this.setState({\n        boxes: boxes,\n        nextX: !this.state.nextX,\n      });\n    }\n    updateSquares(num) {\n      return (\n        <getBoxes \n          value={this.state.boxes[num]} \n          onClick={() => this.handleClick(num)}\n      />\n      );\n    }\n  \n    render() {\n      const winner = checkWinner(this.state.boxes);\n      let update;\n      if (winner) {\n        update = 'The winner\" '+ winner;\n      } else {\n        update = (this.state.nextX ? 'X' : 'O') + \", it is your turn!\";\n      }\n      return (\n        <div>\n          <div className=\"update\">{update}</div>\n          <div className=\"board-row\">\n            {this.updateSquares(0)}\n            {this.updateSquares(1)}\n            {this.updateSquares(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.updateSquares(3)}\n            {this.updateSquares(4)}\n            {this.updateSquares(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.updateSquares(6)}\n            {this.updateSquares(7)}\n            {this.updateSquares(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function checkWinner (boxes) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (boxes[a] && boxes[a] === boxes[b] && boxes[a] === boxes[c]) {\n        return boxes[a];\n      }\n    }\n    return null;\n  }\n  function playGame () {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    );\n}\nReactDOM.render (\n    playGame(),\n    document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}